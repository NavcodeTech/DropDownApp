{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction DropdownComponent_a_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"a\", 5);\n    i0.ɵɵlistener(\"click\", function DropdownComponent_a_5_Template_a_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const option_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.selectOption(option_r1));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(option_r1);\n  }\n}\nexport class DropdownComponent {\n  constructor() {\n    this.optionSelected = new EventEmitter();\n    this.searchTermControl = new FormControl('');\n  }\n  filterOptions() {\n    const searchTerm = this.searchTermControl.value;\n    this.selectedOption = searchTerm; // You can set the selected option based on the search term if needed.\n    this.optionSelected.emit(searchTerm);\n  }\n  static #_ = this.ɵfac = function DropdownComponent_Factory(t) {\n    return new (t || DropdownComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DropdownComponent,\n    selectors: [[\"app-dropdown\"]],\n    inputs: {\n      options: \"options\"\n    },\n    outputs: {\n      optionSelected: \"optionSelected\"\n    },\n    decls: 6,\n    vars: 3,\n    consts: [[1, \"dropdown\"], [\"type\", \"text\", \"placeholder\", \"Search...\", 1, \"form-control\", 3, \"formControl\", \"input\"], [\"type\", \"button\", \"data-toggle\", \"dropdown\", 1, \"btn\", \"btn-secondary\", \"dropdown-toggle\"], [1, \"dropdown-menu\"], [\"class\", \"dropdown-item\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"dropdown-item\", 3, \"click\"]],\n    template: function DropdownComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"input\", 1);\n        i0.ɵɵlistener(\"input\", function DropdownComponent_Template_input_input_1_listener() {\n          return ctx.filterOptions();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"button\", 2);\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 3);\n        i0.ɵɵtemplate(5, DropdownComponent_a_5_Template, 2, 1, \"a\", 4);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formControl\", ctx.searchTermControl);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", ctx.selectedOption || \"Select Option\", \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.options);\n      }\n    },\n    dependencies: [i1.NgForOf, i2.DefaultValueAccessor, i2.NgControlStatus, i2.FormControlDirective],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["EventEmitter","i0","ɵɵelementStart","ɵɵlistener","DropdownComponent_a_5_Template_a_click_0_listener","restoredCtx","ɵɵrestoreView","_r3","option_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","selectOption","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","DropdownComponent","constructor","optionSelected","searchTermControl","FormControl","filterOptions","searchTerm","value","selectedOption","emit","_","_2","selectors","inputs","options","outputs","decls","vars","consts","template","DropdownComponent_Template","rf","ctx","DropdownComponent_Template_input_input_1_listener","ɵɵtemplate","DropdownComponent_a_5_Template","ɵɵproperty","ɵɵtextInterpolate1"],"sources":["C:\\Users\\LENOVO\\Desktop\\e-commerceProj\\dropdownApp\\src\\app\\dropdown\\dropdown.component.ts","C:\\Users\\LENOVO\\Desktop\\e-commerceProj\\dropdownApp\\src\\app\\dropdown\\dropdown.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-dropdown',\n  templateUrl: './dropdown.component.html',\n  styleUrls: ['./dropdown.component.css']\n})\nexport class DropdownComponent {\n  @Input() options: string[];\n  @Output() optionSelected = new EventEmitter<string>();\n\n  selectedOption: string;\n  searchTermControl = new FormControl('');\n\n  filterOptions(): void {\n    const searchTerm = this.searchTermControl.value;\n    this.selectedOption = searchTerm; // You can set the selected option based on the search term if needed.\n    this.optionSelected.emit(searchTerm);\n  }\n}\n","<div class=\"dropdown\">\n    <input type=\"text\" class=\"form-control\" placeholder=\"Search...\" [formControl]=\"searchTermControl\" (input)=\"filterOptions()\">\n    <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\">\n      {{ selectedOption || 'Select Option' }}\n    </button>\n    <div class=\"dropdown-menu\">\n      <a class=\"dropdown-item\" *ngFor=\"let option of options\" (click)=\"selectOption(option)\">{{ option }}</a>\n    </div>\n  </div>\n  "],"mappings":"AAAA,SAAoBA,YAAY,QAAuB,eAAe;;;;;;;ICMhEC,EAAA,CAAAC,cAAA,WAAuF;IAA/BD,EAAA,CAAAE,UAAA,mBAAAC,kDAAA;MAAA,MAAAC,WAAA,GAAAJ,EAAA,CAAAK,aAAA,CAAAC,GAAA;MAAA,MAAAC,SAAA,GAAAH,WAAA,CAAAI,SAAA;MAAA,MAAAC,MAAA,GAAAT,EAAA,CAAAU,aAAA;MAAA,OAASV,EAAA,CAAAW,WAAA,CAAAF,MAAA,CAAAG,YAAA,CAAAL,SAAA,CAAoB;IAAA,EAAC;IAACP,EAAA,CAAAa,MAAA,GAAY;IAAAb,EAAA,CAAAc,YAAA,EAAI;;;;IAAhBd,EAAA,CAAAe,SAAA,GAAY;IAAZf,EAAA,CAAAgB,iBAAA,CAAAT,SAAA,CAAY;;;ADCzG,OAAM,MAAOU,iBAAiB;EAL9BC,YAAA;IAOY,KAAAC,cAAc,GAAG,IAAIpB,YAAY,EAAU;IAGrD,KAAAqB,iBAAiB,GAAG,IAAIC,WAAW,CAAC,EAAE,CAAC;;EAEvCC,aAAaA,CAAA;IACX,MAAMC,UAAU,GAAG,IAAI,CAACH,iBAAiB,CAACI,KAAK;IAC/C,IAAI,CAACC,cAAc,GAAGF,UAAU,CAAC,CAAC;IAClC,IAAI,CAACJ,cAAc,CAACO,IAAI,CAACH,UAAU,CAAC;EACtC;EAAC,QAAAI,CAAA,G;qBAXUV,iBAAiB;EAAA;EAAA,QAAAW,EAAA,G;UAAjBX,iBAAiB;IAAAY,SAAA;IAAAC,MAAA;MAAAC,OAAA;IAAA;IAAAC,OAAA;MAAAb,cAAA;IAAA;IAAAc,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCP9BtC,EAAA,CAAAC,cAAA,aAAsB;QACgFD,EAAA,CAAAE,UAAA,mBAAAsC,kDAAA;UAAA,OAASD,GAAA,CAAAjB,aAAA,EAAe;QAAA,EAAC;QAA3HtB,EAAA,CAAAc,YAAA,EAA4H;QAC5Hd,EAAA,CAAAC,cAAA,gBAAuF;QACrFD,EAAA,CAAAa,MAAA,GACF;QAAAb,EAAA,CAAAc,YAAA,EAAS;QACTd,EAAA,CAAAC,cAAA,aAA2B;QACzBD,EAAA,CAAAyC,UAAA,IAAAC,8BAAA,eAAuG;QACzG1C,EAAA,CAAAc,YAAA,EAAM;;;QAN0Dd,EAAA,CAAAe,SAAA,GAAiC;QAAjCf,EAAA,CAAA2C,UAAA,gBAAAJ,GAAA,CAAAnB,iBAAA,CAAiC;QAE/FpB,EAAA,CAAAe,SAAA,GACF;QADEf,EAAA,CAAA4C,kBAAA,MAAAL,GAAA,CAAAd,cAAA,yBACF;QAE8CzB,EAAA,CAAAe,SAAA,GAAU;QAAVf,EAAA,CAAA2C,UAAA,YAAAJ,GAAA,CAAAR,OAAA,CAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}