{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nfunction DropdownComponent_a_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"a\", 4);\n    i0.ɵɵlistener(\"click\", function DropdownComponent_a_4_Template_a_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const option_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.selectOption(option_r1));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(option_r1);\n  }\n}\nexport class DropdownComponent {\n  constructor() {\n    this.optionSelected = new EventEmitter();\n  }\n  selectOption(option) {\n    this.selectedOption = option;\n    this.optionSelected.emit(option);\n  }\n  static #_ = this.ɵfac = function DropdownComponent_Factory(t) {\n    return new (t || DropdownComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DropdownComponent,\n    selectors: [[\"app-dropdown\"]],\n    inputs: {\n      options: \"options\"\n    },\n    outputs: {\n      optionSelected: \"optionSelected\"\n    },\n    decls: 5,\n    vars: 2,\n    consts: [[1, \"dropdown\"], [\"type\", \"button\", \"data-toggle\", \"dropdown\", 1, \"btn\", \"btn-secondary\", \"dropdown-toggle\"], [1, \"dropdown-menu\"], [\"class\", \"dropdown-item\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"dropdown-item\", 3, \"click\"]],\n    template: function DropdownComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵtemplate(4, DropdownComponent_a_4_Template, 2, 1, \"a\", 3);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", ctx.selectedOption || \"Select Option\", \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.options);\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["EventEmitter","i0","ɵɵelementStart","ɵɵlistener","DropdownComponent_a_4_Template_a_click_0_listener","restoredCtx","ɵɵrestoreView","_r3","option_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","selectOption","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","DropdownComponent","constructor","optionSelected","option","selectedOption","emit","_","_2","selectors","inputs","options","outputs","decls","vars","consts","template","DropdownComponent_Template","rf","ctx","ɵɵtemplate","DropdownComponent_a_4_Template","ɵɵtextInterpolate1","ɵɵproperty"],"sources":["C:\\Users\\LENOVO\\Desktop\\e-commerceProj\\dropdownApp\\src\\app\\dropdown\\dropdown.component.ts","C:\\Users\\LENOVO\\Desktop\\e-commerceProj\\dropdownApp\\src\\app\\dropdown\\dropdown.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-dropdown',\n  templateUrl: './dropdown.component.html',\n  styleUrls: ['./dropdown.component.css']\n})\nexport class DropdownComponent {\n  @Input() options: string[] | undefined;\n  @Output() optionSelected = new EventEmitter<string>();\n\n  selectedOption: string | undefined;\n\n  selectOption(option: string): void {\n    this.selectedOption = option;\n    this.optionSelected.emit(option);\n  }\n}\n","<div class=\"dropdown\">\n    <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\">\n      {{ selectedOption || 'Select Option' }}\n    </button>\n    <div class=\"dropdown-menu\">\n      <a class=\"dropdown-item\" *ngFor=\"let option of options\" (click)=\"selectOption(option)\">{{ option }}</a>\n    </div>\n</div>\n"],"mappings":"AAAA,SAAoBA,YAAY,QAAuB,eAAe;;;;;ICKhEC,EAAA,CAAAC,cAAA,WAAuF;IAA/BD,EAAA,CAAAE,UAAA,mBAAAC,kDAAA;MAAA,MAAAC,WAAA,GAAAJ,EAAA,CAAAK,aAAA,CAAAC,GAAA;MAAA,MAAAC,SAAA,GAAAH,WAAA,CAAAI,SAAA;MAAA,MAAAC,MAAA,GAAAT,EAAA,CAAAU,aAAA;MAAA,OAASV,EAAA,CAAAW,WAAA,CAAAF,MAAA,CAAAG,YAAA,CAAAL,SAAA,CAAoB;IAAA,EAAC;IAACP,EAAA,CAAAa,MAAA,GAAY;IAAAb,EAAA,CAAAc,YAAA,EAAI;;;;IAAhBd,EAAA,CAAAe,SAAA,GAAY;IAAZf,EAAA,CAAAgB,iBAAA,CAAAT,SAAA,CAAY;;;ADEzG,OAAM,MAAOU,iBAAiB;EAL9BC,YAAA;IAOY,KAAAC,cAAc,GAAG,IAAIpB,YAAY,EAAU;;EAIrDa,YAAYA,CAACQ,MAAc;IACzB,IAAI,CAACC,cAAc,GAAGD,MAAM;IAC5B,IAAI,CAACD,cAAc,CAACG,IAAI,CAACF,MAAM,CAAC;EAClC;EAAC,QAAAG,CAAA,G;qBATUN,iBAAiB;EAAA;EAAA,QAAAO,EAAA,G;UAAjBP,iBAAiB;IAAAQ,SAAA;IAAAC,MAAA;MAAAC,OAAA;IAAA;IAAAC,OAAA;MAAAT,cAAA;IAAA;IAAAU,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCP9BlC,EAAA,CAAAC,cAAA,aAAsB;QAEhBD,EAAA,CAAAa,MAAA,GACF;QAAAb,EAAA,CAAAc,YAAA,EAAS;QACTd,EAAA,CAAAC,cAAA,aAA2B;QACzBD,EAAA,CAAAoC,UAAA,IAAAC,8BAAA,eAAuG;QACzGrC,EAAA,CAAAc,YAAA,EAAM;;;QAJJd,EAAA,CAAAe,SAAA,GACF;QADEf,EAAA,CAAAsC,kBAAA,MAAAH,GAAA,CAAAd,cAAA,yBACF;QAE8CrB,EAAA,CAAAe,SAAA,GAAU;QAAVf,EAAA,CAAAuC,UAAA,YAAAJ,GAAA,CAAAR,OAAA,CAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}